from django.db import models

# Create your models here.


# from django_mongoengine import fields as fields
from mongoengine import fields, Document


class VgSales(Document):
    rank = fields.IntField()
    name = fields.StringField()
    platform = fields.StringField()
    year = fields.IntField()
    genre = fields.StringField()
    publisher = fields.StringField()
    na_sales = fields.FloatField()
    eu_sales = fields.FloatField()
    jp_sales = fields.FloatField()
    other_sales = fields.FloatField()
    global_sales = fields.FloatField()

    def __unicode__(self):
        return "%s" % self.name


class GameFeatures(Document):
    queryid = fields.IntField()
    responseid = fields.IntField()
    queryname = fields.StringField(null=True)
    responsename = fields.StringField(null=True)
    releasedate = fields.DateTimeField(null=True)
    requiredage = fields.IntField()
    democount = fields.IntField(default=0)
    developercount = fields.IntField(default=0)
    dlccount = fields.IntField(default=0)
    metacritic = fields.StringField()
    moviecount = fields.IntField(default=0)
    packagecount = fields.IntField(default=0)
    publishercount = fields.IntField(default=0)
    screenshotcount = fields.IntField(default=0)
    steamspyowners = fields.IntField(default=0)
    steamspyownersvariance = fields.IntField(default=0)
    steamspyplayersestimate = fields.IntField(default=0)
    steamspyplayersvariance = fields.IntField(default=0)
    achievementcount = fields.IntField(default=0)
    achievementhighlightedcount = fields.IntField(default=0)
    recommendationcount = fields.IntField(default=0)

    controllersupport = fields.BooleanField()
    isfree = fields.BooleanField()
    freeveravail = fields.BooleanField()
    purchaseavail = fields.BooleanField()
    subscriptionavail = fields.BooleanField()
    platformwindows = fields.BooleanField()
    platformlinux = fields.BooleanField()
    platformmac = fields.BooleanField()
    pcreqshavemin = fields.BooleanField()
    pcreqshaverec = fields.BooleanField()
    linuxreqshavemin = fields.BooleanField()
    linuxreqshaverec = fields.BooleanField()
    macreqshavemin = fields.BooleanField()
    macreqshaverec = fields.BooleanField()
    categorysingleplayer = fields.BooleanField()
    categorymultiplayer = fields.BooleanField()
    categorycoop = fields.BooleanField()
    categorymmo = fields.BooleanField()
    categoryinapppurchase = fields.BooleanField()
    categoryincludesrcsdk = fields.BooleanField()
    categoryincludeleveleditor = fields.BooleanField()
    categoryvrsupport = fields.BooleanField()
    genreisnongame = fields.BooleanField()
    genreisindie = fields.BooleanField()
    genreisaction = fields.BooleanField()
    genreisadventure = fields.BooleanField()
    genreiscasual = fields.BooleanField()
    genreisstrategy = fields.BooleanField()
    genreisrpg = fields.BooleanField()
    genreissimulation = fields.BooleanField()
    genreisearlyaccess = fields.BooleanField()
    genreisfreetoplay = fields.BooleanField()
    genreissports = fields.BooleanField()
    genreisracing = fields.BooleanField()
    genreismassivelymultiplayer = fields.BooleanField()
    pricecurrency = fields.StringField(null=True)
    priceinitial = fields.FloatField(default=0)
    pricefinal = fields.FloatField(default=0)
    supportemail = fields.StringField(null=True)
    supporturl = fields.StringField(null=True)
    abouttext = fields.StringField(null=True)
    background = fields.StringField(null=True)
    shortdescrip = fields.StringField(null=True)
    detaileddescrip = fields.StringField(null=True)
    drmnotice = fields.StringField(null=True)
    headerimage = fields.StringField(null=True)
    legalnotice = fields.StringField(null=True)
    reviews = fields.StringField(null=True)
    supportedlanguages = fields.StringField(null=True)
    website = fields.StringField(null=True)
    pcminreqstext = fields.StringField(null=True)
    pcrecreqstext = fields.StringField(null=True)
    linuxminreqstext = fields.StringField(null=True)
    linuxrecreqstext = fields.StringField(null=True)
    macminreqstext = fields.StringField(null=True)
    macrecreqstext = fields.StringField(null=True)
    extuseracctnotice = fields.StringField(null=True)

    def __unicode__(self):
        return self.queryname
